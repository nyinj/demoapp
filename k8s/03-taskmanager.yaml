# Task Manager Application Deployment and Service
# This file creates the main application deployment and exposes it via a service
# 📝 IMPORTANT: Replace 02220158 with your actual student number (e.g., 0215539)

# Deployment - Manages the Task Manager application Pods
apiVersion: apps/v1 # API version for Deployment resources
kind: Deployment # Resource type - manages application replicas
metadata: # Information about this Deployment
  name: taskmanager-deployment
  namespace: "02220158" # 📝 Replace 02220158 with your number
  labels: # Labels for organizing resources
    app: taskmanager
    component: frontend
    version: v1
    student: "02220158" # 📝 Replace with your student number
spec: # Desired state specification
  replicas: 2 # Run 2 copies for high availability and load distribution
  selector: # How to find Pods managed by this Deployment
    matchLabels: # Pods must have these labels
      app: taskmanager
  template: # Template for creating new Pods
    metadata: # Labels applied to each Pod
      labels:
        app: taskmanager # Must match selector above
        version: v1
    spec: # Pod specification
      containers: # Containers in each Pod
        - name: taskmanager # Container name
          # Docker image from your CI/CD pipeline (update with your DockerHub username)
          image: nyinj/task-manager:83b1c448ec891cd93412f06c9cf082a597dcab09
          ports: # Ports exposed by container
            - containerPort: 8000 # Port the Flask app listens on
              name: http # Named port for Service reference
          env: # Environment variables
            - name: DATABASE_URL # Database connection string
              value: "postgresql://myuser:uWhSZwv54wXv1T7F@10.104.0.6:5432/02220158"
            - name: SECRET_KEY # Flask secret key
              value: "kubernetes-secret-key-02220158" # 📝 Replace 02220158
            - name: FLASK_ENV
              value: "production"
              # 200 millicores max CPU
          # Health checks to ensure container is working properly
          # Check every 5 seconds

